name: CI

# Declare default permissions as read only.
permissions: read-all

on:
  push:
    branches:
      - main
  pull_request:
    types:
      # These are the defaults. See
      # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request
      - opened
      - reopened
      - synchronize

      # Used for `full-ci`
      - labeled
    branches:
      - '**'

concurrency:
  group: ci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  inspect-code:
    name: '[Required] Inspect code'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - name: Setup Puppeteer GitHub Action
        uses: ./.github/actions/setup
        with:
          download-browsers: false
      - name: Check code
        run: npm run check
      - name: Validate licenses
        run: npm run validate-licenses
      - name: Tests types
        run: npm run test-types
      - name: Verify packages are synced
        run: npm run validate-deps
      - name: Lint code
        run: npm run lint
      - name: Generate documents
        run: npm run docs
      - name: Check if autogenerated docs differ
        run: |
          diff_file=$(mktemp doc_diff_XXXXXX)
          git diff --color > $diff_file
          if [[ -s $diff_file ]]; then
            echo "Please update the documentation by running 'npm run docs'. The following was the diff"
            cat $diff_file
            rm $diff_file
            exit 1
          fi
          rm $diff_file

  check-changes:
    uses: ./.github/workflows/changed-packages.yml
    with:
      check-mergeable-state: true

  doctest:
    name: Doctest
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ false && contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - name: Setup Puppeteer GitHub Action
        uses: ./.github/actions/setup
        with:
          download-browsers: false
      - name: Run tests
        run: npm run doctest

  chrome-tests:
    name: ${{ matrix.suite }} (${{ matrix.shard }}) on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: check-changes
    if: ${{ contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
    strategy:
      fail-fast: false
      matrix:
        linux-only:
          - ${{ needs.check-changes.outputs.linux-only }}
        suite:
          - chrome-headless
          - chrome-headful
          - chrome-headless-shell
          - chrome-bidi
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        shard:
          - 1-2
          - 2-2
        exclude:
          - linux-only: 'true'
            os: windows-latest
          - linux-only: 'true'
            os: macos-latest
          - linux-only: 'true'
            suite: chrome-headful

          - os: windows-latest
            suite: chrome-bidi
          - os: macos-latest
            suite: chrome-headful
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - name: Setup Puppeteer GitHub Action
        uses: ./.github/actions/setup
        with:
          build-package: '@puppeteer-test/test'
      - name: Run all tests (MacOS)
        if: ${{ matrix.os == 'macos-latest' }}
        run: npm run test -- --shard '${{ matrix.shard }}' --test-suite ${{ matrix.suite }} --save-stats-to /tmp/artifacts/${{ github.event_name }}_INSERTID.json
      - name: Run all tests (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: npm run test -- -- --shard '${{ matrix.shard }}' --test-suite ${{ matrix.suite }} --save-stats-to /tmp/artifacts/${{ github.event_name }}_INSERTID.json
      - name: Run all tests (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: xvfb-run --auto-servernum npm run test -- --shard '${{ matrix.shard }}' --test-suite ${{ matrix.suite }} --save-stats-to /tmp/artifacts/${{ github.event_name }}_INSERTID.json
      - uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        if: ${{ !cancelled() }}
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.suite }}-${{ matrix.shard }}
          path: /tmp/artifacts/*.json

  chrome-tests-required:
    name: '[Required] Chrome tests'
    needs: [check-changes, chrome-tests]
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    steps:
      - if: ${{ needs.chrome-tests.result != 'success' && contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
        run: 'exit 1'
      - run: 'exit 0'

  firefox-tests:
    name: ${{ matrix.suite }} (${{ matrix.shard }}) on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: check-changes
    if: ${{ contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
    strategy:
      fail-fast: false
      matrix:
        linux-only:
          - ${{ needs.check-changes.outputs.linux-only }}
        suite:
          - firefox-headful
          - firefox-headless
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        shard:
          - 1-4
          - 2-4
          - 3-4
          - 4-4
        exclude:
          - linux-only: 'true'
            os: windows-latest
          - linux-only: 'true'
            os: macos-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - name: Setup Puppeteer GitHub Action
        uses: ./.github/actions/setup
        with:
          build-package: '@puppeteer-test/test'
      - name: Run all tests (MacOS)
        if: ${{ matrix.os == 'macos-latest' }}
        run: npm run test -- --shard '${{ matrix.shard }}' --test-suite ${{ matrix.suite }} --save-stats-to /tmp/artifacts/${{ github.event_name }}_INSERTID.json
      - name: Run all tests (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: npm run test -- -- --shard '${{ matrix.shard }}' --test-suite ${{ matrix.suite }} --save-stats-to /tmp/artifacts/${{ github.event_name }}_INSERTID.json
      - name: Run all tests (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: xvfb-run --auto-servernum npm run test -- --shard '${{ matrix.shard }}' --test-suite ${{ matrix.suite }} --save-stats-to /tmp/artifacts/${{ github.event_name }}_INSERTID.json
      - uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        if: ${{ !cancelled() }}
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.suite }}-${{ matrix.shard }}
          path: /tmp/artifacts/*.json

  firefox-tests-required:
    name: '[Required] Firefox tests'
    needs: [check-changes, firefox-tests]
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    steps:
      - if: ${{ needs.firefox-tests.result != 'success' && contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
        run: 'exit 1'
      - run: 'exit 0'

  installation-test:
    name: ${{ matrix.pkg_manager }} installation on ${{ matrix.os }}
    needs: check-changes
    if: ${{ !startsWith(github.ref_name, 'release-please') && contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        linux-only:
          - ${{ needs.check-changes.outputs.linux-only }}
        pkg_manager:
          - npm
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        exclude:
          - linux-only: 'true'
            os: windows-latest
          - linux-only: 'true'
            os: macos-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - name: Setup Puppeteer GitHub Action
        uses: ./.github/actions/setup
        with:
          download-browsers: false
      - name: Test install
        env:
          PKG_MANAGER: ${{ matrix.pkg_manager }}
        run: ${{ matrix.pkg_manager }} run test-install

  installation-test-required:
    name: '[Required] Installation tests'
    needs: [check-changes, installation-test]
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    steps:
      - if: ${{ needs.installation-test.result != 'success' && contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
        run: 'exit 1'
      - run: 'exit 0'

  docker-tests:
    name: '[Required] Docker image test'
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - name: Setup Puppeteer GitHub Action
        uses: ./.github/actions/setup
        with:
          build-package: puppeteer
      - name: Pack packages
        run: docker/pack.sh
      - name: Build docker image
        working-directory: ./docker
        run: |
          docker build -t puppeteer-test-image .
      - name: Run smoke test
        working-directory: ./docker
        run: |
          docker run -i --init --cap-add=SYS_ADMIN --rm puppeteer-test-image node -e "`cat test/smoke-test.js`"

  unit-tests:
    name: '[Required] Puppeteer Unit tests'
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - name: Setup Puppeteer GitHub Action
        uses: ./.github/actions/setup
        with:
          build-package: '@puppeteer/browsers'
          download-browsers: false
      - name: Run unit tests
        run: |
          npm run unit -w puppeteer-core -w puppeteer --if-present

  ng-schematics-unit:
    name: '[Required] Angular Schematics tests'
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ contains(fromJSON(needs.check-changes.outputs.changes), 'ng-schematics') }}
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - name: Setup Puppeteer GitHub Action
        uses: ./.github/actions/setup
        with:
          build-package: '@puppeteer/ng-schematics'
          download-browsers: false
      - name: Run tests
        run: npm run unit --workspace @puppeteer/ng-schematics

  ng-schematics-smoke-tests:
    name: Angular Schematics smoke tests on ${{ matrix.os }} ${{ matrix.test-runner }}
    runs-on: ${{ matrix.os }}
    needs: check-changes
    if: ${{ contains(fromJSON(needs.check-changes.outputs.changes), 'ng-schematics') }}
    strategy:
      fail-fast: false
      matrix:
        linux-only:
          - ${{ needs.check-changes.outputs.linux-only }}
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        test-runner:
          - node
          - jest
          - jasmine
          - mocha
        exclude:
          - linux-only: 'true'
            os: windows-latest
          - linux-only: 'true'
            os: macos-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - name: Setup Puppeteer GitHub Action
        uses: ./.github/actions/setup
      - name: Run tests
        run: node tools/smoke.mjs -r ${{ matrix.test-runner }}
        working-directory: ./packages/ng-schematics

  ng-schematics-smoke-tests-required:
    name: '[Required] Angular Schematics smoke tests'
    needs: [check-changes, ng-schematics-smoke-tests]
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    steps:
      - if: ${{ needs.ng-schematics-smoke-tests.result != 'success' && contains(fromJSON(needs.check-changes.outputs.changes), 'ng-schematics') }}
        run: 'exit 1'
      - run: 'exit 0'

  browsers-tests:
    name: Browsers tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: check-changes
    if: ${{ contains(fromJSON(needs.check-changes.outputs.changes), 'browsers') }}
    strategy:
      fail-fast: false
      matrix:
        linux-only:
          - ${{ needs.check-changes.outputs.linux-only }}
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        exclude:
          - linux-only: 'true'
            os: windows-latest
          - linux-only: 'true'
            os: macos-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - name: Setup Puppeteer GitHub Action
        uses: ./.github/actions/setup
        with:
          build-package: '@puppeteer/browsers'
          download-browsers: false
      - name: Setup cache for browsers
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: packages/browsers/test/.cache/server
          key: TestBrowsers-${{ runner.os }}-${{ hashFiles('packages/browsers/test/src/versions.ts') }}-${{ hashFiles('packages/browsers/tools/downloadTestBrowsers.mjs') }}
      - name: Run tests
        run: npm run test --workspace @puppeteer/browsers

  browsers-tests-required:
    name: '[Required] Test the browsers packages'
    needs: [check-changes, browsers-tests]
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    steps:
      - if: ${{ needs.browsers-tests.result != 'success' && contains(fromJSON(needs.check-changes.outputs.changes), 'browsers') }}
        run: 'exit 1'
      - run: 'exit 0'
