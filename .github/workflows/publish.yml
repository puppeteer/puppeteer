name: Publish

permissions: read-all

on:
  workflow_dispatch:
  push:
    tags:
      - '*v*'

jobs:
  npm-publish:
    name: Publish npm packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2
      - name: Set up Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          cache: npm
          node-version-file: '.nvmrc'
      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_DOWNLOAD: true
      - name: Build packages
        run: npm run build
      - name: Set npm registry
        run: npm config set registry 'https://wombat-dressing-room.appspot.com/'
      - name: Publish packages
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN_RELEASE}}
        run: |
          npm config set '//wombat-dressing-room.appspot.com/:_authToken' $NODE_AUTH_TOKEN
          npm publish -w packages/${GITHUB_REF_NAME%-v*}
      - name: Deprecate old Puppeteer versions
        if: ${{ startsWith(github.ref_name, 'puppeteer-v') }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN_PUPPETEER}}
        run: |
          npm config set '//wombat-dressing-room.appspot.com/:_authToken' $NODE_AUTH_TOKEN
          version_range=$(node tools/get_deprecated_version_range.mjs)
          npm deprecate puppeteer@"$version_range" "$version_range is no longer supported" || true
  docker-publish:
    name: Publish Docker image
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref_name, 'puppeteer-v') }}
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2
      - name: Set up Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          cache: npm
          node-version-file: '.nvmrc'
      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_DOWNLOAD: true
      - name: Build packages
        run: npm run build
      - name: Pack packages for docker
        run: docker/pack.sh
      # Based on https://docs.github.com/en/actions/publishing-packages/publishing-docker-images.
      - name: Log in to the Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            latest
            type=match,pattern=puppeteer-v(\d+\.\d+\.\d+),group=1
            type=match,pattern=puppeteer-v(\d+)\.\d+\.\d+,group=1
      - name: Build and push the Docker image
        uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d # v6.12.0
        with:
          context: ./docker
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
