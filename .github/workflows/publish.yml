name: Publish

on:
  workflow_dispatch:
  push:
    tags:
      - '*v*'

jobs:
  npm-publish:
    name: Publish npm packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out repository
        uses: actions/checkout@v3.0.2
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Build packages
        run: npm run build
      - name: Set npm registry
        run: npm config set registry 'https://wombat-dressing-room.appspot.com/'
      - name: Publish Puppeteer
        if: ${{ startsWith(github.ref_name, 'v') }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN_PUPPETEER}}
        run: |
          npm config set '//wombat-dressing-room.appspot.com/:_authToken' $NODE_AUTH_TOKEN
          npm publish --workspace packages/puppeteer
      - name: Publish packages
        if: ${{ !startsWith(github.ref_name, 'v') }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN_RELEASE}}
        run: |
          npm config set '//wombat-dressing-room.appspot.com/:_authToken' $NODE_AUTH_TOKEN
          npm publish --workspace packages/${GITHUB_REF_NAME%-v*}
  docker-publish:
    name: Publish Docker image
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref_name, 'v') }}
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3.0.2
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Build packages
        run: npm run build
      - name: Pack packages for docker
        run: docker/pack.sh
      # Based on https://docs.github.com/en/actions/publishing-packages/publishing-docker-images.
      - name: Log in to the Container registry
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            latest
            type=semver,pattern={{version}}
      - name: Build and push the Docker image
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        with:
          context: ./docker
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
