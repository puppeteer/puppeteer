name: Publish

permissions: read-all

on:
  workflow_dispatch:
  push:
    tags:
      - '*v*'

jobs:
  npm-publish:
    name: Publish npm packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out repository
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_DOWNLOAD: true
      - name: Build packages
        run: npm run build
      - name: Set npm registry
        run: npm config set registry 'https://wombat-dressing-room.appspot.com/'
      - name: Publish packages
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN_RELEASE}}
        run: |
          npm config set '//wombat-dressing-room.appspot.com/:_authToken' $NODE_AUTH_TOKEN
          npm publish -w packages/${GITHUB_REF_NAME%-v*}
      - name: Deprecate old Puppeteer versions
        if: ${{ startsWith(github.ref_name, 'puppeteer-v') }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN_PUPPETEER}}
        run: |
          npm config set '//wombat-dressing-room.appspot.com/:_authToken' $NODE_AUTH_TOKEN
          version_range=$(node tools/get_deprecated_version_range.js)
          npm deprecate puppeteer@"$version_range" "$version_range is no longer supported" || true
  docker-publish:
    name: Publish Docker image
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref_name, 'puppeteer-v') }}
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Check out repository
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_DOWNLOAD: true
      - name: Build packages
        run: npm run build
      - name: Pack packages for docker
        run: docker/pack.sh
      # Based on https://docs.github.com/en/actions/publishing-packages/publishing-docker-images.
      - name: Log in to the Container registry
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            latest
            type=match,pattern=puppeteer-v(\d+\.\d+\.\d+),group=1
            type=match,pattern=puppeteer-v(\d+)\.\d+\.\d+,group=1
      - name: Build and push the Docker image
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: ./docker
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
