[
  {
    "testIdPattern": "[browsercontext-cookies.spec] BrowserContext cookies BrowserContext.setCookie should set cookie with a partition key",
    "platforms": ["darwin", "linux", "win32"],
    "parameters": ["firefox", "webDriverBiDi"],
    "expectations": ["PASS"]
  },
  {
    "testIdPattern": "[launcher.spec] Launcher specs Puppeteer Puppeteer.launch userDataDir option should restore cookies",
    "platforms": ["darwin"],
    "parameters": ["cdp", "chrome-headless-shell"],
    "expectations": ["PASS"]
  },
  {
    "testIdPattern": "[navigation.spec] navigation Page.goto should work when page calls history API in beforeunload",
    "platforms": ["darwin", "linux", "win32"],
    "parameters": ["firefox", "webDriverBiDi"],
    "expectations": ["FAIL"],
    "comment": "https://bugzilla.mozilla.org/show_bug.cgi?id=1908952#c4 historyUpdated from beforeunload incorrectly comes before navigationStarted"
  },
  {
    "testIdPattern": "[navigation.spec] navigation Page.goBack should work with HistoryAPI",
    "platforms": ["darwin", "linux", "win32"],
    "parameters": ["firefox", "webDriverBiDi"],
    "expectations": ["PASS"]
  },
  {
    "testIdPattern": "[navigation.spec] navigation Page.waitForNavigation should work with DOM history.back()/history.forward()",
    "platforms": ["darwin", "linux", "win32"],
    "parameters": ["firefox", "webDriverBiDi"],
    "expectations": ["PASS"]
  },
  {
    "testIdPattern": "[navigation.spec] navigation Page.waitForNavigation should work with history.pushState()",
    "platforms": ["darwin", "linux", "win32"],
    "parameters": ["firefox", "webDriverBiDi"],
    "expectations": ["PASS"]
  },
  {
    "testIdPattern": "[navigation.spec] navigation Page.waitForNavigation should work with history.replaceState()",
    "platforms": ["darwin", "linux", "win32"],
    "parameters": ["firefox", "webDriverBiDi"],
    "expectations": ["PASS"]
  },
  {
    "testIdPattern": "[requestinterception-experimental.spec] cooperative request interception Request.continue should redirect in a way non-observable to page",
    "platforms": ["darwin", "linux", "win32"],
    "parameters": ["firefox", "webDriverBiDi"],
    "expectations": ["PASS"]
  },
  {
    "testIdPattern": "[requestinterception.spec] request interception Request.continue should redirect in a way non-observable to page",
    "platforms": ["darwin", "linux", "win32"],
    "parameters": ["firefox", "webDriverBiDi"],
    "expectations": ["PASS"]
  }
]
